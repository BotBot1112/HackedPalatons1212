

import telebot

bot = telebot.TeleBot("6694663855:AAHL7RYBLDQNHlxsjskXtYEg_saGZUoqnU0")


bot.set_my_commands([
    telebot.types.BotCommand("/start","–ù–∞—á–∞—Ç—å"),
    telebot.types.BotCommand("/inf","–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"),
    telebot.types.BotCommand("/help","–ò—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–ª–≤–∞–Ω–∏—é"),
    telebot.types.BotCommand("/about","–û –Ω–∞—Å"),
])



# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_imports = {}
user_imports2 = {}

@bot.message_handler(commands=['start'])
def start(message):
    user_name = message.from_user.first_name
    text = f"–ü—Ä–∏–≤–µ—Ç, {user_name}.\n\n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –ª–µ–≥–∫–æ —É–∑–Ω–∞–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–≤–æ–π —Ç–µ—Å—Ç –Ω–∞ –ø–ª–∞—Ç–æ–Ω–µ.\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ /inf\n\n–°—Å—ã–ª–∫–∞ –Ω–∞"
    url="<a href='https://platon.s1212.ru/'>—Å–∞–π—Ç</a>"
    bot.send_message(message.chat.id, text+" "+url,parse_mode="HTML")

@bot.message_handler(commands=['import'])
def import_text(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–ª–∏—á–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é –∑–∞–¥–∞—á–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–º–≤–æ–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –∫–∞–≤—ã—á–∫–∞—Ö –∏–ª–∏ –Ω–∞–∑–∞–≤–∞–Ω–∏—è —á–µ–≥–æ –ª–∏–±–æ)")
    bot.register_next_step_handler(message, process_import)

@bot.message_handler(commands=['number'])
def input_number(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–æ–π –∑–∞–¥–∞—á–∏")
    bot.register_next_step_handler(message, process_number)

def process_number(message):
    user_id = message.from_user.id
    user_imports2[user_id] = message.text

    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
    –ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É = 'answers3.txt'

    # –ò—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ
    –∏—Å–∫–æ–º–æ–µ_—á–∏—Å–ª–æ = message.text

    # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫
    try:
        with open(–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É, 'r') as —Ñ–∞–π–ª:
            found = False
            for —Å—Ç—Ä–æ–∫–∞ in —Ñ–∞–π–ª:
                if f"[{–∏—Å–∫–æ–º–æ–µ_—á–∏—Å–ª–æ}]" in —Å—Ç—Ä–æ–∫–∞:
                    bot.send_message(user_id, —Å—Ç—Ä–æ–∫–∞)
                    found = True
                    break
            if not found:
                bot.send_message(user_id, f"–ò—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ '{–∏—Å–∫–æ–º–æ–µ_—á–∏—Å–ª–æ}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–∞–π–ª–µ.")
    except FileNotFoundError:
        bot.send_message(user_id, f"–§–∞–π–ª '{–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")


@bot.message_handler(commands=['about'])
def about(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω –æ–¥–Ω–∏–º –∏–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–º —è –º–æ–≥—É –±—ã—Ç—å —Å—Ä–µ–¥–∏ –≤–∞—Å..\n\n–ö–æ–Ω–µ—á–Ω–æ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –±–æ—Ç–∞ –≤ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö")

@bot.message_handler(commands=['inf'])
def inf(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è ‚Ññ3\n\n–í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ /import —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ —Å–≤–æ—é –∑–∞–¥–∞—á—É.")

def process_import(message):
    user_id = message.from_user.id
    user_imports[user_id] = message.text
    bot.send_message(user_id, "–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω. –ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∑–∞–¥–∞—á—É –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /search")

@bot.message_handler(commands=['search'])
def search_text(message):
    user_id = message.from_user.id
    if user_id in user_imports:
        imported_text = user_imports[user_id]

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        try:
            with open('ege3.txt', 'r', encoding='utf-8') as file:
                found_mertvye_dushi = False
                for line in file:
                    if imported_text in line:
                        found_mertvye_dushi = True
                        bot.send_message(user_id, line)
                    elif found_mertvye_dushi and line.strip() == "":
                        break
                    elif found_mertvye_dushi:
                        bot.send_message(user_id, line)
                bot.send_message(user_id, "ü•≥ –ó–∞–¥–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ! –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω—ã—Ö –∑–∞–¥–∞—á –≤–∞—à—É –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ—ë –Ω–æ–º–µ—Ä. –¢–∞–∫ –∂–µ —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—à–∞ –∑–∞–¥–∞—á–∞\n\n–û—Ç–ø—Ä–∞–≤—å /number –∞ –∑–∞—Ç–µ–º –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è")

        except FileNotFoundError:
            bot.send_message(user_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏")
    else:
        bot.send_message(user_id, "–°–Ω–∞—á–∞–ª–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /import")

bot.infinity_polling()
